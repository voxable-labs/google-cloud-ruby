# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/cloud/dialogflow/v2beta1/session.proto for package 'google.cloud.dialogflow.v2beta1'
# Original file comments:
# Copyright 2018 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/cloud/dialogflow/v2beta1/session_pb'

module Google
  module Cloud
    module Dialogflow
      module V2beta1
        module Sessions
          # A session represents an interaction with a user. You retrieve user input
          # and pass it to the [DetectIntent][google.cloud.dialogflow.v2beta1.Sessions.DetectIntent] (or
          # [StreamingDetectIntent][google.cloud.dialogflow.v2beta1.Sessions.StreamingDetectIntent]) method to determine
          # user intent and respond.
          class Service

            include GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.cloud.dialogflow.v2beta1.Sessions'

            # Processes a natural language query and returns structured, actionable data
            # as a result. This method is not idempotent, because it may cause contexts
            # and session entity types to be updated, which in turn might affect
            # results of future queries.
            rpc :DetectIntent, DetectIntentRequest, DetectIntentResponse
            # Processes a natural language query in audio format in a streaming fashion
            # and returns structured, actionable data as a result. This method is only
            # available via the gRPC API (not REST).
            rpc :StreamingDetectIntent, stream(StreamingDetectIntentRequest), stream(StreamingDetectIntentResponse)
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
